stages:
    - build
    # - test
    # - deploy
docker-build:
    # Use the official docker image.
    image: docker:latest
    stage: build
    services:
        - docker:dind
    before_script:
        - docker info

build_and_configure:
    stage: build
    image: node
    tags:
        - nei-runner
    services:
        - name: docker:dind
    # variables:
    #     DOCKER_DRIVER: overlay2
    # before_script:

    # - docker info
    # - cat /etc/os-release
    # - echo $AWS_ACCESS_KEY_ID
    # - echo $AWS_SECRET_ACCESS_KEY
    # - apt-get update -y
    # - apt-get install -y docker.io
    # - apt-get install -y awscli
    # - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    # - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    # - aws --version
    # - docker --version
    script:
        #     - echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $HOME/.aws/credentials
        #     - echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $HOME/.aws/credentials
        #     - echo "AWS_DEFAULT_REGION=eu-west-1" >> $HOME/.aws/config
        #     - aws --version
        # - echo "output=json" >> $HOME/.aws/config
        # - aws ecr get-login-password --region eu-west-1 | docker login -u AWS --password-stdin $ECR_URI.dkr.ecr.$ECR_REGION.amazonaws.com 2>&1
        - docker info
        - aws --version
        - docker build -t $ECR_URI.dkr.ecr.$ECR_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG .
        - docker images

    # only:
    #     - main
# build:
#     stage: build
#     image: node:latest
#     tags:
#         - nei-runner
# services:
#     - docker:dind

# script:
#     - echo "hello world"
#     - ls -al
#     - docker pull nginx
#     - docker images

# script:
# - docker buildx build --platform linux/amd64 -t $DOCKER_REGISTRY/$DOCKER_REPO:$CI_COMMIT_TAG .
# - /usr/bin/docker tag $DOCKER_REGISTRY:$CI_PIPELINE_IID $DOCKER_REGISTRY:latest
#     - aws ecr get-login-password --region eu-west-1 --profile 8027 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
#     - docker push $DOCKER_REGISTRY/$DOCKER_REPO:$CI_COMMIT_TAG
# only:
# - main
# deploy:
#     stage: deploy
#     image: 802783396857.dkr.ecr.eu-west-1.amazonaws.com/nei_repository:latest
#     script:
#         - docker build -t $CI

# cache:
#   paths:
#     - node_modules/

# test_async:
#   script:
#     - npm install
#     - node ./specs/start.js ./specs/async.spec.js

# test_db:
#   script:
#     - npm install
#     - node ./specs/start.js ./specs/db-postgres.spec.js

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production
